//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BamycServiceAjax
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SedapExpressEntities : DbContext
    {
        public SedapExpressEntities()
            : base("name=SedapExpressEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        [DbFunction("SedapExpressEntities", "fnSplitString")]
        public virtual IQueryable<fnSplitString_Result> fnSplitString(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnSplitString_Result>("[SedapExpressEntities].[fnSplitString](@string, @delimiter)", stringParameter, delimiterParameter);
        }
    
        [DbFunction("SedapExpressEntities", "nop_splitstring_to_table")]
        public virtual IQueryable<nop_splitstring_to_table_Result> nop_splitstring_to_table(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<nop_splitstring_to_table_Result>("[SedapExpressEntities].[nop_splitstring_to_table](@string, @delimiter)", stringParameter, delimiterParameter);
        }
    
        [DbFunction("SedapExpressEntities", "Split")]
        public virtual IQueryable<Split_Result> Split(string inputString, string delimiter)
        {
            var inputStringParameter = inputString != null ?
                new ObjectParameter("InputString", inputString) :
                new ObjectParameter("InputString", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[SedapExpressEntities].[Split](@InputString, @Delimiter)", inputStringParameter, delimiterParameter);
        }
    
        public virtual int AddDeliveryDetails(Nullable<int> orderId, string type, string image)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddDeliveryDetails", orderIdParameter, typeParameter, imageParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AddLogOutUser(Nullable<System.Guid> customerGuid, string ipAddress)
        {
            var customerGuidParameter = customerGuid.HasValue ?
                new ObjectParameter("CustomerGuid", customerGuid) :
                new ObjectParameter("CustomerGuid", typeof(System.Guid));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddLogOutUser", customerGuidParameter, ipAddressParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddNewShippingAddress(Nullable<int> customerId, string firstname, string lastname, string email, Nullable<int> phone, string customAttributes, Nullable<int> countryId, string stateProvinceId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(int));
    
            var customAttributesParameter = customAttributes != null ?
                new ObjectParameter("CustomAttributes", customAttributes) :
                new ObjectParameter("CustomAttributes", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var stateProvinceIdParameter = stateProvinceId != null ?
                new ObjectParameter("StateProvinceId", stateProvinceId) :
                new ObjectParameter("StateProvinceId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddNewShippingAddress", customerIdParameter, firstnameParameter, lastnameParameter, emailParameter, phoneParameter, customAttributesParameter, countryIdParameter, stateProvinceIdParameter);
        }
    
        public virtual int AddToCartFromWishlist(Nullable<int> shoppingCartId)
        {
            var shoppingCartIdParameter = shoppingCartId.HasValue ?
                new ObjectParameter("ShoppingCartId", shoppingCartId) :
                new ObjectParameter("ShoppingCartId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddToCartFromWishlist", shoppingCartIdParameter);
        }
    
        public virtual int AddToWishlist(Nullable<int> productId, Nullable<int> customerId, Nullable<int> quantity)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddToWishlist", productIdParameter, customerIdParameter, quantityParameter);
        }
    
        public virtual int AddTracking(Nullable<int> customerId, string latitude, string longitude)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTracking", customerIdParameter, latitudeParameter, longitudeParameter);
        }
    
        public virtual int AddUserInfo(string firstname, string lastname, string email, string streetAddress, string country, string area, string phoneNumber)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var streetAddressParameter = streetAddress != null ?
                new ObjectParameter("StreetAddress", streetAddress) :
                new ObjectParameter("StreetAddress", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUserInfo", firstnameParameter, lastnameParameter, emailParameter, streetAddressParameter, countryParameter, areaParameter, phoneNumberParameter);
        }
    
        public virtual ObjectResult<BestSellingProducts_Result> BestSellingProducts(Nullable<int> count, Nullable<int> customerId)
        {
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BestSellingProducts_Result>("BestSellingProducts", countParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<BestSellingProducts_CartUpdate_Result> BestSellingProducts_CartUpdate(Nullable<int> count, Nullable<int> customerId)
        {
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BestSellingProducts_CartUpdate_Result>("BestSellingProducts_CartUpdate", countParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<CartAmountTotal_Result> CartAmountTotal(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CartAmountTotal_Result>("CartAmountTotal", customerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CartItemNumberUpdate(Nullable<int> customerId, Nullable<int> productId, Nullable<int> type)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CartItemNumberUpdate", customerIdParameter, productIdParameter, typeParameter);
        }
    
        public virtual int CategoryLoadAllPaged(Nullable<bool> showHidden, string name, Nullable<int> storeId, string customerRoleIds, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecords)
        {
            var showHiddenParameter = showHidden.HasValue ?
                new ObjectParameter("ShowHidden", showHidden) :
                new ObjectParameter("ShowHidden", typeof(bool));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var customerRoleIdsParameter = customerRoleIds != null ?
                new ObjectParameter("CustomerRoleIds", customerRoleIds) :
                new ObjectParameter("CustomerRoleIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CategoryLoadAllPaged", showHiddenParameter, nameParameter, storeIdParameter, customerRoleIdsParameter, pageIndexParameter, pageSizeParameter, totalRecords);
        }
    
        public virtual ObjectResult<Nullable<int>> CheckOut(Nullable<System.Guid> orderGuid, Nullable<System.Guid> orderItemGuid, Nullable<int> customerId, Nullable<int> shippingAddressId, string paymentMethod)
        {
            var orderGuidParameter = orderGuid.HasValue ?
                new ObjectParameter("OrderGuid", orderGuid) :
                new ObjectParameter("OrderGuid", typeof(System.Guid));
    
            var orderItemGuidParameter = orderItemGuid.HasValue ?
                new ObjectParameter("OrderItemGuid", orderItemGuid) :
                new ObjectParameter("OrderItemGuid", typeof(System.Guid));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var shippingAddressIdParameter = shippingAddressId.HasValue ?
                new ObjectParameter("ShippingAddressId", shippingAddressId) :
                new ObjectParameter("ShippingAddressId", typeof(int));
    
            var paymentMethodParameter = paymentMethod != null ?
                new ObjectParameter("PaymentMethod", paymentMethod) :
                new ObjectParameter("PaymentMethod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckOut", orderGuidParameter, orderItemGuidParameter, customerIdParameter, shippingAddressIdParameter, paymentMethodParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> count_item(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("count_item", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> count_items(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("count_items", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> countitems(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("countitems", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> countproducts(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("countproducts", idParameter);
        }
    
        public virtual int CustomerInfoUpdate(Nullable<int> customerId, string firstName, string lastName, string streetAddress, Nullable<int> countryId, Nullable<int> stateProvinceId, string phone)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var streetAddressParameter = streetAddress != null ?
                new ObjectParameter("StreetAddress", streetAddress) :
                new ObjectParameter("StreetAddress", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var stateProvinceIdParameter = stateProvinceId.HasValue ?
                new ObjectParameter("StateProvinceId", stateProvinceId) :
                new ObjectParameter("StateProvinceId", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustomerInfoUpdate", customerIdParameter, firstNameParameter, lastNameParameter, streetAddressParameter, countryIdParameter, stateProvinceIdParameter, phoneParameter);
        }
    
        public virtual ObjectResult<string> CustomerName(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CustomerName", customerIdParameter);
        }
    
        public virtual ObjectResult<CustomerShippingAddress_Result> CustomerShippingAddress(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerShippingAddress_Result>("CustomerShippingAddress", customerIdParameter);
        }
    
        public virtual int DeleteGuests(Nullable<bool> onlyWithoutShoppingCart, Nullable<System.DateTime> createdFromUtc, Nullable<System.DateTime> createdToUtc, ObjectParameter totalRecordsDeleted)
        {
            var onlyWithoutShoppingCartParameter = onlyWithoutShoppingCart.HasValue ?
                new ObjectParameter("OnlyWithoutShoppingCart", onlyWithoutShoppingCart) :
                new ObjectParameter("OnlyWithoutShoppingCart", typeof(bool));
    
            var createdFromUtcParameter = createdFromUtc.HasValue ?
                new ObjectParameter("CreatedFromUtc", createdFromUtc) :
                new ObjectParameter("CreatedFromUtc", typeof(System.DateTime));
    
            var createdToUtcParameter = createdToUtc.HasValue ?
                new ObjectParameter("CreatedToUtc", createdToUtc) :
                new ObjectParameter("CreatedToUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteGuests", onlyWithoutShoppingCartParameter, createdFromUtcParameter, createdToUtcParameter, totalRecordsDeleted);
        }
    
        public virtual int DeleteProductFromCart(Nullable<int> customerId, Nullable<int> productId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProductFromCart", customerIdParameter, productIdParameter);
        }
    
        public virtual int DeleteProductFromWishlist(Nullable<int> customerId, Nullable<int> productId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProductFromWishlist", customerIdParameter, productIdParameter);
        }
    
        public virtual int DeleteProofAndSignature(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProofAndSignature", idParameter);
        }
    
        public virtual int DeleteShippingAddressById(Nullable<int> addressId)
        {
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteShippingAddressById", addressIdParameter);
        }
    
        public virtual ObjectResult<DeliveryOrderStatus_Result> DeliveryOrderStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeliveryOrderStatus_Result>("DeliveryOrderStatus");
        }
    
        public virtual int DutyAddUpdate(Nullable<int> customerId, string dutyStatus, string dutyON, string dutyOFF)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var dutyStatusParameter = dutyStatus != null ?
                new ObjectParameter("DutyStatus", dutyStatus) :
                new ObjectParameter("DutyStatus", typeof(string));
    
            var dutyONParameter = dutyON != null ?
                new ObjectParameter("DutyON", dutyON) :
                new ObjectParameter("DutyON", typeof(string));
    
            var dutyOFFParameter = dutyOFF != null ?
                new ObjectParameter("DutyOFF", dutyOFF) :
                new ObjectParameter("DutyOFF", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DutyAddUpdate", customerIdParameter, dutyStatusParameter, dutyONParameter, dutyOFFParameter);
        }
    
        public virtual int FullText_Disable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FullText_Disable");
        }
    
        public virtual int FullText_Enable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FullText_Enable");
        }
    
        public virtual ObjectResult<Nullable<int>> FullText_IsSupported()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FullText_IsSupported");
        }
    
        public virtual ObjectResult<GetAllAddress_Result> GetAllAddress(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAddress_Result>("GetAllAddress", customerIdParameter);
        }
    
        public virtual ObjectResult<GetAllAreas_Result> GetAllAreas(string countryId)
        {
            var countryIdParameter = countryId != null ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAreas_Result>("GetAllAreas", countryIdParameter);
        }
    
        public virtual ObjectResult<GetAllCartedItems_Result> GetAllCartedItems(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCartedItems_Result>("GetAllCartedItems", customerIdParameter);
        }
    
        public virtual ObjectResult<GetAllCategories_Result> GetAllCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCategories_Result>("GetAllCategories");
        }
    
        public virtual ObjectResult<GetAllCategoryProducts_Result> GetAllCategoryProducts(Nullable<int> categoryId, Nullable<int> pageSize, Nullable<int> pageNumber)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCategoryProducts_Result>("GetAllCategoryProducts", categoryIdParameter, pageSizeParameter, pageNumberParameter);
        }
    
        public virtual ObjectResult<GetAllCategoryProducts_Quantity_Result> GetAllCategoryProducts_Quantity(Nullable<int> customerId, Nullable<int> categoryId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCategoryProducts_Quantity_Result>("GetAllCategoryProducts_Quantity", customerIdParameter, categoryIdParameter);
        }
    
        public virtual ObjectResult<GetAllCountries_Result> GetAllCountries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCountries_Result>("GetAllCountries");
        }
    
        public virtual int GetAllDeliverySlots(Nullable<int> areaId, Nullable<int> totalDays, string image)
        {
            var areaIdParameter = areaId.HasValue ?
                new ObjectParameter("AreaId", areaId) :
                new ObjectParameter("AreaId", typeof(int));
    
            var totalDaysParameter = totalDays.HasValue ?
                new ObjectParameter("TotalDays", totalDays) :
                new ObjectParameter("TotalDays", typeof(int));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetAllDeliverySlots", areaIdParameter, totalDaysParameter, imageParameter);
        }
    
        public virtual int GetAllLocations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetAllLocations");
        }
    
        public virtual ObjectResult<GetAllMainMenus_Result> GetAllMainMenus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllMainMenus_Result>("GetAllMainMenus");
        }
    
        public virtual ObjectResult<GetAllOrderDelivery_Result> GetAllOrderDelivery()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllOrderDelivery_Result>("GetAllOrderDelivery");
        }
    
        public virtual ObjectResult<GetAllOrderItemDetails_Result> GetAllOrderItemDetails(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllOrderItemDetails_Result>("GetAllOrderItemDetails", orderIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetAllOrderStatus(Nullable<int> customerId, Nullable<int> orderStatusId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var orderStatusIdParameter = orderStatusId.HasValue ?
                new ObjectParameter("OrderStatusId", orderStatusId) :
                new ObjectParameter("OrderStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetAllOrderStatus", customerIdParameter, orderStatusIdParameter);
        }
    
        public virtual ObjectResult<GetAllPendingInvoice_Result> GetAllPendingInvoice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPendingInvoice_Result>("GetAllPendingInvoice");
        }
    
        public virtual ObjectResult<GetAllProducts_Result> GetAllProducts(string searchingData)
        {
            var searchingDataParameter = searchingData != null ?
                new ObjectParameter("SearchingData", searchingData) :
                new ObjectParameter("SearchingData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllProducts_Result>("GetAllProducts", searchingDataParameter);
        }
    
        public virtual ObjectResult<string> GetAllProductsBarcode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetAllProductsBarcode");
        }
    
        public virtual ObjectResult<GetAllSearchedProducts_Result> GetAllSearchedProducts(string searchingData, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> customerId)
        {
            var searchingDataParameter = searchingData != null ?
                new ObjectParameter("SearchingData", searchingData) :
                new ObjectParameter("SearchingData", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSearchedProducts_Result>("GetAllSearchedProducts", searchingDataParameter, pageSizeParameter, pageNumberParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<GetAllSearchedProducts_CartUpdate_Result> GetAllSearchedProducts_CartUpdate(string searchingData, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> customerId)
        {
            var searchingDataParameter = searchingData != null ?
                new ObjectParameter("SearchingData", searchingData) :
                new ObjectParameter("SearchingData", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSearchedProducts_CartUpdate_Result>("GetAllSearchedProducts_CartUpdate", searchingDataParameter, pageSizeParameter, pageNumberParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<GetAllSubMenus_Result> GetAllSubMenus(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSubMenus_Result>("GetAllSubMenus", idParameter);
        }
    
        public virtual ObjectResult<GetAllWishlistItems_Result> GetAllWishlistItems(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllWishlistItems_Result>("GetAllWishlistItems", customerIdParameter);
        }
    
        public virtual ObjectResult<GetCartWishlistCount_Result> GetCartWishlistCount(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCartWishlistCount_Result>("GetCartWishlistCount", idParameter);
        }
    
        public virtual ObjectResult<GetCustomerByEmailId_Result> GetCustomerByEmailId(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerByEmailId_Result>("GetCustomerByEmailId", emailParameter);
        }
    
        public virtual int GetCustomerById()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCustomerById");
        }
    
        public virtual ObjectResult<GetCustomerByUsername_Result> GetCustomerByUsername(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerByUsername_Result>("GetCustomerByUsername", usernameParameter);
        }
    
        public virtual ObjectResult<string> GetCustomerNameByCustomerId(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCustomerNameByCustomerId", customerIdParameter);
        }
    
        public virtual ObjectResult<GetCustomerOrderAddress_Result> GetCustomerOrderAddress(Nullable<int> orderId, Nullable<int> customerId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerOrderAddress_Result>("GetCustomerOrderAddress", orderIdParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<GetOfferProduct_Result> GetOfferProduct(Nullable<int> count, Nullable<int> customerId)
        {
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOfferProduct_Result>("GetOfferProduct", countParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<GetOfferProduct_CartUpdate_Result> GetOfferProduct_CartUpdate(Nullable<int> count, Nullable<int> customerId)
        {
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOfferProduct_CartUpdate_Result>("GetOfferProduct_CartUpdate", countParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<GetOrderBillingAddress_Result> GetOrderBillingAddress(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderBillingAddress_Result>("GetOrderBillingAddress", orderIdParameter);
        }
    
        public virtual int GetOrderDetailsByStatus(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> orderStatusId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var orderStatusIdParameter = orderStatusId.HasValue ?
                new ObjectParameter("OrderStatusId", orderStatusId) :
                new ObjectParameter("OrderStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetOrderDetailsByStatus", pageNumberParameter, pageSizeParameter, orderStatusIdParameter);
        }
    
        public virtual ObjectResult<getOrderedProducts_Result> getOrderedProducts(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getOrderedProducts_Result>("getOrderedProducts", orderIdParameter);
        }
    
        public virtual ObjectResult<GetOrderShippingAddress_Result> GetOrderShippingAddress(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderShippingAddress_Result>("GetOrderShippingAddress", orderIdParameter);
        }
    
        public virtual ObjectResult<GetOrderSignature_Result> GetOrderSignature(Nullable<int> orderId, string type)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderSignature_Result>("GetOrderSignature", orderIdParameter, typeParameter);
        }
    
        public virtual ObjectResult<GetOrderStatus_Result> GetOrderStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderStatus_Result>("GetOrderStatus");
        }
    
        public virtual ObjectResult<GetProductDetails_Result> GetProductDetails(Nullable<int> productId, Nullable<int> customerId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductDetails_Result>("GetProductDetails", productIdParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<GetProductDetails_Quantity_Result> GetProductDetails_Quantity(Nullable<int> productId, Nullable<int> customerId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductDetails_Quantity_Result>("GetProductDetails_Quantity", productIdParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<GetShippingAddressById_Result> GetShippingAddressById(Nullable<int> addressId)
        {
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetShippingAddressById_Result>("GetShippingAddressById", addressIdParameter);
        }
    
        public virtual int GuestAddressRegistration(string firstname, string lastname, string email, Nullable<int> phone, string streetAddress, Nullable<int> countryId, string stateProvinceId, string ipAddress, string customAttributes, Nullable<System.Guid> customerGuid)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(int));
    
            var streetAddressParameter = streetAddress != null ?
                new ObjectParameter("StreetAddress", streetAddress) :
                new ObjectParameter("StreetAddress", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var stateProvinceIdParameter = stateProvinceId != null ?
                new ObjectParameter("StateProvinceId", stateProvinceId) :
                new ObjectParameter("StateProvinceId", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            var customAttributesParameter = customAttributes != null ?
                new ObjectParameter("CustomAttributes", customAttributes) :
                new ObjectParameter("CustomAttributes", typeof(string));
    
            var customerGuidParameter = customerGuid.HasValue ?
                new ObjectParameter("CustomerGuid", customerGuid) :
                new ObjectParameter("CustomerGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuestAddressRegistration", firstnameParameter, lastnameParameter, emailParameter, phoneParameter, streetAddressParameter, countryIdParameter, stateProvinceIdParameter, ipAddressParameter, customAttributesParameter, customerGuidParameter);
        }
    
        public virtual ObjectResult<HighPriceProducts_Result> HighPriceProducts(Nullable<int> count, Nullable<int> customerId)
        {
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HighPriceProducts_Result>("HighPriceProducts", countParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<HighPriceProducts_CartUpdate_Result> HighPriceProducts_CartUpdate(Nullable<int> count, Nullable<int> customerId)
        {
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HighPriceProducts_CartUpdate_Result>("HighPriceProducts_CartUpdate", countParameter, customerIdParameter);
        }
    
        public virtual int LanguagePackImport(Nullable<int> languageId, string xmlPackage, Nullable<bool> updateExistingResources)
        {
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            var xmlPackageParameter = xmlPackage != null ?
                new ObjectParameter("XmlPackage", xmlPackage) :
                new ObjectParameter("XmlPackage", typeof(string));
    
            var updateExistingResourcesParameter = updateExistingResources.HasValue ?
                new ObjectParameter("UpdateExistingResources", updateExistingResources) :
                new ObjectParameter("UpdateExistingResources", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LanguagePackImport", languageIdParameter, xmlPackageParameter, updateExistingResourcesParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> login_procedure(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("login_procedure", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> loginprocedure(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("loginprocedure", idParameter);
        }
    
        public virtual ObjectResult<LowPriceProducts_Result> LowPriceProducts(Nullable<int> count, Nullable<int> customerId)
        {
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LowPriceProducts_Result>("LowPriceProducts", countParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<LowPriceProducts_CartUpdate_Result> LowPriceProducts_CartUpdate(Nullable<int> count, Nullable<int> customerId)
        {
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LowPriceProducts_CartUpdate_Result>("LowPriceProducts_CartUpdate", countParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Order_Item(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Order_Item", idParameter);
        }
    
        public virtual ObjectResult<OrderAmountTotal_Result> OrderAmountTotal(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderAmountTotal_Result>("OrderAmountTotal", orderIdParameter);
        }
    
        public virtual ObjectResult<OrderlyDetails_Result> OrderlyDetails(Nullable<int> orderStatusId)
        {
            var orderStatusIdParameter = orderStatusId.HasValue ?
                new ObjectParameter("OrderStatusId", orderStatusId) :
                new ObjectParameter("OrderStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderlyDetails_Result>("OrderlyDetails", orderStatusIdParameter);
        }
    
        public virtual ObjectResult<OrderProductDetails_Result> OrderProductDetails(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderProductDetails_Result>("OrderProductDetails", orderIdParameter);
        }
    
        public virtual ObjectResult<PasswordValidation_Result> PasswordValidation(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PasswordValidation_Result>("PasswordValidation", usernameParameter, passwordParameter);
        }
    
        public virtual int ProductLoadAllPaged(string categoryIds, Nullable<int> manufacturerId, Nullable<int> storeId, Nullable<int> vendorId, Nullable<int> warehouseId, Nullable<int> productTypeId, Nullable<bool> visibleIndividuallyOnly, Nullable<bool> markedAsNewOnly, Nullable<int> productTagId, Nullable<bool> featuredProducts, Nullable<decimal> priceMin, Nullable<decimal> priceMax, string keywords, Nullable<bool> searchDescriptions, Nullable<bool> searchManufacturerPartNumber, Nullable<bool> searchSku, Nullable<bool> searchProductTags, Nullable<bool> useFullTextSearch, Nullable<int> fullTextMode, string filteredSpecs, Nullable<int> languageId, Nullable<int> orderBy, string allowedCustomerRoleIds, Nullable<int> pageIndex, Nullable<int> pageSize, Nullable<bool> showHidden, Nullable<bool> overridePublished, Nullable<bool> loadFilterableSpecificationAttributeOptionIds, ObjectParameter filterableSpecificationAttributeOptionIds, ObjectParameter totalRecords)
        {
            var categoryIdsParameter = categoryIds != null ?
                new ObjectParameter("CategoryIds", categoryIds) :
                new ObjectParameter("CategoryIds", typeof(string));
    
            var manufacturerIdParameter = manufacturerId.HasValue ?
                new ObjectParameter("ManufacturerId", manufacturerId) :
                new ObjectParameter("ManufacturerId", typeof(int));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("WarehouseId", warehouseId) :
                new ObjectParameter("WarehouseId", typeof(int));
    
            var productTypeIdParameter = productTypeId.HasValue ?
                new ObjectParameter("ProductTypeId", productTypeId) :
                new ObjectParameter("ProductTypeId", typeof(int));
    
            var visibleIndividuallyOnlyParameter = visibleIndividuallyOnly.HasValue ?
                new ObjectParameter("VisibleIndividuallyOnly", visibleIndividuallyOnly) :
                new ObjectParameter("VisibleIndividuallyOnly", typeof(bool));
    
            var markedAsNewOnlyParameter = markedAsNewOnly.HasValue ?
                new ObjectParameter("MarkedAsNewOnly", markedAsNewOnly) :
                new ObjectParameter("MarkedAsNewOnly", typeof(bool));
    
            var productTagIdParameter = productTagId.HasValue ?
                new ObjectParameter("ProductTagId", productTagId) :
                new ObjectParameter("ProductTagId", typeof(int));
    
            var featuredProductsParameter = featuredProducts.HasValue ?
                new ObjectParameter("FeaturedProducts", featuredProducts) :
                new ObjectParameter("FeaturedProducts", typeof(bool));
    
            var priceMinParameter = priceMin.HasValue ?
                new ObjectParameter("PriceMin", priceMin) :
                new ObjectParameter("PriceMin", typeof(decimal));
    
            var priceMaxParameter = priceMax.HasValue ?
                new ObjectParameter("PriceMax", priceMax) :
                new ObjectParameter("PriceMax", typeof(decimal));
    
            var keywordsParameter = keywords != null ?
                new ObjectParameter("Keywords", keywords) :
                new ObjectParameter("Keywords", typeof(string));
    
            var searchDescriptionsParameter = searchDescriptions.HasValue ?
                new ObjectParameter("SearchDescriptions", searchDescriptions) :
                new ObjectParameter("SearchDescriptions", typeof(bool));
    
            var searchManufacturerPartNumberParameter = searchManufacturerPartNumber.HasValue ?
                new ObjectParameter("SearchManufacturerPartNumber", searchManufacturerPartNumber) :
                new ObjectParameter("SearchManufacturerPartNumber", typeof(bool));
    
            var searchSkuParameter = searchSku.HasValue ?
                new ObjectParameter("SearchSku", searchSku) :
                new ObjectParameter("SearchSku", typeof(bool));
    
            var searchProductTagsParameter = searchProductTags.HasValue ?
                new ObjectParameter("SearchProductTags", searchProductTags) :
                new ObjectParameter("SearchProductTags", typeof(bool));
    
            var useFullTextSearchParameter = useFullTextSearch.HasValue ?
                new ObjectParameter("UseFullTextSearch", useFullTextSearch) :
                new ObjectParameter("UseFullTextSearch", typeof(bool));
    
            var fullTextModeParameter = fullTextMode.HasValue ?
                new ObjectParameter("FullTextMode", fullTextMode) :
                new ObjectParameter("FullTextMode", typeof(int));
    
            var filteredSpecsParameter = filteredSpecs != null ?
                new ObjectParameter("FilteredSpecs", filteredSpecs) :
                new ObjectParameter("FilteredSpecs", typeof(string));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            var orderByParameter = orderBy.HasValue ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(int));
    
            var allowedCustomerRoleIdsParameter = allowedCustomerRoleIds != null ?
                new ObjectParameter("AllowedCustomerRoleIds", allowedCustomerRoleIds) :
                new ObjectParameter("AllowedCustomerRoleIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var showHiddenParameter = showHidden.HasValue ?
                new ObjectParameter("ShowHidden", showHidden) :
                new ObjectParameter("ShowHidden", typeof(bool));
    
            var overridePublishedParameter = overridePublished.HasValue ?
                new ObjectParameter("OverridePublished", overridePublished) :
                new ObjectParameter("OverridePublished", typeof(bool));
    
            var loadFilterableSpecificationAttributeOptionIdsParameter = loadFilterableSpecificationAttributeOptionIds.HasValue ?
                new ObjectParameter("LoadFilterableSpecificationAttributeOptionIds", loadFilterableSpecificationAttributeOptionIds) :
                new ObjectParameter("LoadFilterableSpecificationAttributeOptionIds", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductLoadAllPaged", categoryIdsParameter, manufacturerIdParameter, storeIdParameter, vendorIdParameter, warehouseIdParameter, productTypeIdParameter, visibleIndividuallyOnlyParameter, markedAsNewOnlyParameter, productTagIdParameter, featuredProductsParameter, priceMinParameter, priceMaxParameter, keywordsParameter, searchDescriptionsParameter, searchManufacturerPartNumberParameter, searchSkuParameter, searchProductTagsParameter, useFullTextSearchParameter, fullTextModeParameter, filteredSpecsParameter, languageIdParameter, orderByParameter, allowedCustomerRoleIdsParameter, pageIndexParameter, pageSizeParameter, showHiddenParameter, overridePublishedParameter, loadFilterableSpecificationAttributeOptionIdsParameter, filterableSpecificationAttributeOptionIds, totalRecords);
        }
    
        public virtual ObjectResult<ProductTagCountLoadAll_Result> ProductTagCountLoadAll(Nullable<int> storeId)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductTagCountLoadAll_Result>("ProductTagCountLoadAll", storeIdParameter);
        }
    
        public virtual ObjectResult<SearchProductsList_Result> SearchProductsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchProductsList_Result>("SearchProductsList");
        }
    
        public virtual int SetDeliveryProof(Nullable<int> orderId, string fileName, string type)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetDeliveryProof", orderIdParameter, fileNameParameter, typeParameter);
        }
    
        public virtual int ShoppingCartAddItem(Nullable<int> productId, Nullable<int> shoppingcartId, Nullable<int> customerId, Nullable<int> quantity, Nullable<int> storeId, string from)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var shoppingcartIdParameter = shoppingcartId.HasValue ?
                new ObjectParameter("ShoppingcartId", shoppingcartId) :
                new ObjectParameter("ShoppingcartId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var fromParameter = from != null ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShoppingCartAddItem", productIdParameter, shoppingcartIdParameter, customerIdParameter, quantityParameter, storeIdParameter, fromParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ShoppingCartCount(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ShoppingCartCount", customerIdParameter);
        }
    
        public virtual int ShoppingCartSynchronization(Nullable<int> logInCustomerId, Nullable<int> logOutCustomerId, Nullable<int> shoppingcarttypeId)
        {
            var logInCustomerIdParameter = logInCustomerId.HasValue ?
                new ObjectParameter("LogInCustomerId", logInCustomerId) :
                new ObjectParameter("LogInCustomerId", typeof(int));
    
            var logOutCustomerIdParameter = logOutCustomerId.HasValue ?
                new ObjectParameter("LogOutCustomerId", logOutCustomerId) :
                new ObjectParameter("LogOutCustomerId", typeof(int));
    
            var shoppingcarttypeIdParameter = shoppingcarttypeId.HasValue ?
                new ObjectParameter("shoppingcarttypeId", shoppingcarttypeId) :
                new ObjectParameter("shoppingcarttypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShoppingCartSynchronization", logInCustomerIdParameter, logOutCustomerIdParameter, shoppingcarttypeIdParameter);
        }
    
        public virtual int SyncProductsQty(Nullable<double> qty, string barcode)
        {
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(double));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("Barcode", barcode) :
                new ObjectParameter("Barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SyncProductsQty", qtyParameter, barcodeParameter);
        }
    
        public virtual ObjectResult<string> test()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("test");
        }
    
        public virtual int TrackingInformations(Nullable<int> customerId, Nullable<int> orderId, string latitude, string longitude, string altitude, string accuracy, string altitude_Accuracy, string heading, string speed, string timestamp, string iMEI)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(string));
    
            var altitudeParameter = altitude != null ?
                new ObjectParameter("Altitude", altitude) :
                new ObjectParameter("Altitude", typeof(string));
    
            var accuracyParameter = accuracy != null ?
                new ObjectParameter("Accuracy", accuracy) :
                new ObjectParameter("Accuracy", typeof(string));
    
            var altitude_AccuracyParameter = altitude_Accuracy != null ?
                new ObjectParameter("Altitude_Accuracy", altitude_Accuracy) :
                new ObjectParameter("Altitude_Accuracy", typeof(string));
    
            var headingParameter = heading != null ?
                new ObjectParameter("Heading", heading) :
                new ObjectParameter("Heading", typeof(string));
    
            var speedParameter = speed != null ?
                new ObjectParameter("Speed", speed) :
                new ObjectParameter("Speed", typeof(string));
    
            var timestampParameter = timestamp != null ?
                new ObjectParameter("Timestamp", timestamp) :
                new ObjectParameter("Timestamp", typeof(string));
    
            var iMEIParameter = iMEI != null ?
                new ObjectParameter("IMEI", iMEI) :
                new ObjectParameter("IMEI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrackingInformations", customerIdParameter, orderIdParameter, latitudeParameter, longitudeParameter, altitudeParameter, accuracyParameter, altitude_AccuracyParameter, headingParameter, speedParameter, timestampParameter, iMEIParameter);
        }
    
        public virtual ObjectResult<TrackOrderDetails_Result> TrackOrderDetails(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TrackOrderDetails_Result>("TrackOrderDetails", customerIdParameter);
        }
    
        public virtual int UpdateAddressInfo(Nullable<int> customerId, string firstname, string lastname, string email, string streetAddress, string country, string area, Nullable<int> phone, string password)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var streetAddressParameter = streetAddress != null ?
                new ObjectParameter("StreetAddress", streetAddress) :
                new ObjectParameter("StreetAddress", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAddressInfo", customerIdParameter, firstnameParameter, lastnameParameter, emailParameter, streetAddressParameter, countryParameter, areaParameter, phoneParameter, passwordParameter);
        }
    
        public virtual int UpdateDeliveryStatus(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDeliveryStatus", orderIdParameter);
        }
    
        public virtual int UpdateOrderedProductDetails(Nullable<int> orderId, string sku, Nullable<decimal> itemWeight, Nullable<int> quantity, Nullable<decimal> price, Nullable<decimal> totalPrice)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var skuParameter = sku != null ?
                new ObjectParameter("Sku", sku) :
                new ObjectParameter("Sku", typeof(string));
    
            var itemWeightParameter = itemWeight.HasValue ?
                new ObjectParameter("ItemWeight", itemWeight) :
                new ObjectParameter("ItemWeight", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var totalPriceParameter = totalPrice.HasValue ?
                new ObjectParameter("TotalPrice", totalPrice) :
                new ObjectParameter("TotalPrice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrderedProductDetails", orderIdParameter, skuParameter, itemWeightParameter, quantityParameter, priceParameter, totalPriceParameter);
        }
    
        public virtual int UpdateOrderInvoic(Nullable<int> orderId, Nullable<long> invNo)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var invNoParameter = invNo.HasValue ?
                new ObjectParameter("InvNo", invNo) :
                new ObjectParameter("InvNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrderInvoic", orderIdParameter, invNoParameter);
        }
    
        public virtual int UpdateOrderInvoiceStatus(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrderInvoiceStatus", orderIdParameter);
        }
    
        public virtual int UpdateOrderInvoicItemPrice(Nullable<long> invNo, string barcode, Nullable<decimal> qty, Nullable<decimal> sellingPrice, Nullable<decimal> productCost)
        {
            var invNoParameter = invNo.HasValue ?
                new ObjectParameter("InvNo", invNo) :
                new ObjectParameter("InvNo", typeof(long));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("Barcode", barcode) :
                new ObjectParameter("Barcode", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(decimal));
    
            var sellingPriceParameter = sellingPrice.HasValue ?
                new ObjectParameter("SellingPrice", sellingPrice) :
                new ObjectParameter("SellingPrice", typeof(decimal));
    
            var productCostParameter = productCost.HasValue ?
                new ObjectParameter("ProductCost", productCost) :
                new ObjectParameter("ProductCost", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrderInvoicItemPrice", invNoParameter, barcodeParameter, qtyParameter, sellingPriceParameter, productCostParameter);
        }
    
        public virtual int UpdateOrderInvoicPrice(Nullable<long> invNo, Nullable<int> orderId, Nullable<decimal> orderSubtotalInclTax, Nullable<decimal> orderSubtotalExclTax, Nullable<decimal> orderTotal)
        {
            var invNoParameter = invNo.HasValue ?
                new ObjectParameter("InvNo", invNo) :
                new ObjectParameter("InvNo", typeof(long));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var orderSubtotalInclTaxParameter = orderSubtotalInclTax.HasValue ?
                new ObjectParameter("OrderSubtotalInclTax", orderSubtotalInclTax) :
                new ObjectParameter("OrderSubtotalInclTax", typeof(decimal));
    
            var orderSubtotalExclTaxParameter = orderSubtotalExclTax.HasValue ?
                new ObjectParameter("OrderSubtotalExclTax", orderSubtotalExclTax) :
                new ObjectParameter("OrderSubtotalExclTax", typeof(decimal));
    
            var orderTotalParameter = orderTotal.HasValue ?
                new ObjectParameter("OrderTotal", orderTotal) :
                new ObjectParameter("OrderTotal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrderInvoicPrice", invNoParameter, orderIdParameter, orderSubtotalInclTaxParameter, orderSubtotalExclTaxParameter, orderTotalParameter);
        }
    
        public virtual int UpdateOrderSlot(Nullable<int> orderId, Nullable<System.DateTime> deliveryDate, string slot)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var deliveryDateParameter = deliveryDate.HasValue ?
                new ObjectParameter("DeliveryDate", deliveryDate) :
                new ObjectParameter("DeliveryDate", typeof(System.DateTime));
    
            var slotParameter = slot != null ?
                new ObjectParameter("Slot", slot) :
                new ObjectParameter("Slot", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrderSlot", orderIdParameter, deliveryDateParameter, slotParameter);
        }
    
        public virtual int UpdateOrderStatus(Nullable<int> orderId, Nullable<int> orderStatus)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var orderStatusParameter = orderStatus.HasValue ?
                new ObjectParameter("OrderStatus", orderStatus) :
                new ObjectParameter("OrderStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrderStatus", orderIdParameter, orderStatusParameter);
        }
    
        public virtual int UpdatePassword(string password, string email)
        {
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePassword", passwordParameter, emailParameter);
        }
    
        public virtual int UpdateShippingAddress(Nullable<int> id, string firstName, string lastName, string email, string phoneNumber, string customAttributes, Nullable<int> countryId, Nullable<int> stateProvinceId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var customAttributesParameter = customAttributes != null ?
                new ObjectParameter("CustomAttributes", customAttributes) :
                new ObjectParameter("CustomAttributes", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var stateProvinceIdParameter = stateProvinceId.HasValue ?
                new ObjectParameter("StateProvinceId", stateProvinceId) :
                new ObjectParameter("StateProvinceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateShippingAddress", idParameter, firstNameParameter, lastNameParameter, emailParameter, phoneNumberParameter, customAttributesParameter, countryIdParameter, stateProvinceIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> WishListItemNumberUpdate(Nullable<int> customerId, Nullable<int> productId, Nullable<int> type)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("WishListItemNumberUpdate", customerIdParameter, productIdParameter, typeParameter);
        }
    
        public virtual int WishlistSynchronization(Nullable<int> logInCustomerId, Nullable<int> logOutCustomerId, Nullable<int> shoppingcarttypeId)
        {
            var logInCustomerIdParameter = logInCustomerId.HasValue ?
                new ObjectParameter("LogInCustomerId", logInCustomerId) :
                new ObjectParameter("LogInCustomerId", typeof(int));
    
            var logOutCustomerIdParameter = logOutCustomerId.HasValue ?
                new ObjectParameter("LogOutCustomerId", logOutCustomerId) :
                new ObjectParameter("LogOutCustomerId", typeof(int));
    
            var shoppingcarttypeIdParameter = shoppingcarttypeId.HasValue ?
                new ObjectParameter("shoppingcarttypeId", shoppingcarttypeId) :
                new ObjectParameter("shoppingcarttypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WishlistSynchronization", logInCustomerIdParameter, logOutCustomerIdParameter, shoppingcarttypeIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetWishlistCount(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetWishlistCount", customerIdParameter);
        }
    
        public virtual ObjectResult<CustomerInfo_Result> CustomerInfo(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerInfo_Result>("CustomerInfo", customerIdParameter);
        }
    
        public virtual int SaveAddressInfo(string saltKey, string firstname, string lastname, string email, string streetAddress, Nullable<int> countryId, string stateProvinceId, Nullable<int> phone, string password, Nullable<System.Guid> customerGuid, Nullable<int> displayOrder, Nullable<int> storeId)
        {
            var saltKeyParameter = saltKey != null ?
                new ObjectParameter("SaltKey", saltKey) :
                new ObjectParameter("SaltKey", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var streetAddressParameter = streetAddress != null ?
                new ObjectParameter("StreetAddress", streetAddress) :
                new ObjectParameter("StreetAddress", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var stateProvinceIdParameter = stateProvinceId != null ?
                new ObjectParameter("StateProvinceId", stateProvinceId) :
                new ObjectParameter("StateProvinceId", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var customerGuidParameter = customerGuid.HasValue ?
                new ObjectParameter("CustomerGuid", customerGuid) :
                new ObjectParameter("CustomerGuid", typeof(System.Guid));
    
            var displayOrderParameter = displayOrder.HasValue ?
                new ObjectParameter("DisplayOrder", displayOrder) :
                new ObjectParameter("DisplayOrder", typeof(int));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveAddressInfo", saltKeyParameter, firstnameParameter, lastnameParameter, emailParameter, streetAddressParameter, countryIdParameter, stateProvinceIdParameter, phoneParameter, passwordParameter, customerGuidParameter, displayOrderParameter, storeIdParameter);
        }
    
        public virtual ObjectResult<GetProductById_Result> GetProductById(string productIds, Nullable<int> customerId)
        {
            var productIdsParameter = productIds != null ?
                new ObjectParameter("ProductIds", productIds) :
                new ObjectParameter("ProductIds", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductById_Result>("GetProductById", productIdsParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<GetProductById_CartUpdate_Result> GetProductById_CartUpdate(string productIds, Nullable<int> customerId)
        {
            var productIdsParameter = productIds != null ?
                new ObjectParameter("ProductIds", productIds) :
                new ObjectParameter("ProductIds", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductById_CartUpdate_Result>("GetProductById_CartUpdate", productIdsParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<string> CustomerLoginRegistration(string firstname, string lastname, string email, Nullable<int> phone, string streetAddress, Nullable<int> countryId, string stateProvinceId, string password, string passwordSalt, Nullable<System.Guid> customerGuid)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(int));
    
            var streetAddressParameter = streetAddress != null ?
                new ObjectParameter("StreetAddress", streetAddress) :
                new ObjectParameter("StreetAddress", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var stateProvinceIdParameter = stateProvinceId != null ?
                new ObjectParameter("StateProvinceId", stateProvinceId) :
                new ObjectParameter("StateProvinceId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(string));
    
            var customerGuidParameter = customerGuid.HasValue ?
                new ObjectParameter("CustomerGuid", customerGuid) :
                new ObjectParameter("CustomerGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CustomerLoginRegistration", firstnameParameter, lastnameParameter, emailParameter, phoneParameter, streetAddressParameter, countryIdParameter, stateProvinceIdParameter, passwordParameter, passwordSaltParameter, customerGuidParameter);
        }
    }
}
